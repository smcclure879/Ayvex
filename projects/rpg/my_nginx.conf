user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;






events {
	worker_connections 768;
	# multi_accept on;
}


#bugbug does this passthru of TCP work to relay SSL HTTPS
#no....what to do now???  site is broken
#  this doesn't work. it would need to be up in some higher config file. 
stream {
       server {
            listen 443;
             proxy_pass 127.0.0.1:3443;
       }
}


http {





	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	#include /etc/nginx/sites-enabled/*;     #bugbug i have inlined it instead....
	server {   #for serving the old site....
      	        listen 80 default_server;
		listen [::]:80 default_server;
		# bugbug use tcp stream redir instead    listen 443 default_server;
		# listen [::]:443 default_server;
		
		server_name localhost www.localhost _;
		location / {
			 proxy_pass      http://127.0.0.1:3080;
			 proxy_set_header   Host             $host;	
			 proxy_set_header   X-Real-IP        $remote_addr;
		}			 
	}

	server {
       	       listen 80 ;
	       listen [::]:80 ;
	       #bugbug listen 443 for SSL also!!
       	       server_name rpg.localhost;
	       location / {
       	       		proxy_pass      http://127.0.0.1:3001;
			proxy_set_header   Host             $host;	
                	proxy_set_header   X-Real-IP        $remote_addr;
       		}
	}



# Default server configuration
#
#server {
#	listen 80 default_server;
#	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	#root /var/www/html;

	# Add index.php to the list if you are using PHP
	#index index.html index.htm index.nginx-debian.html;

#	server_name _;




#	location / {
#        	    #proxy_pass      http://big_server_com;

# 		proxy_pass      http://127.0.0.1:2999;

# 		proxy_set_header   Host             $host;	
#                 proxy_set_header   X-Real-IP        $remote_addr;

#          }


# 	#location / {
# 		# First attempt to serve request as file, then
# 		# as directory, then fall back to displaying a 404.
# 	#	try_files $uri $uri/ =404;
# 	#}

# 	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
# 	#
# 	#location ~ \.php$ {
# 	#	include snippets/fastcgi-php.conf;
# 	#
# 	#	# With php7.0-cgi alone:
# 	#	fastcgi_pass 127.0.0.1:9000;
# 	#	# With php7.0-fpm:
# 	#	fastcgi_pass unix:/run/php/php7.0-fpm.sock;
# 	#}

# 	# deny access to .htaccess files, if Apache's document root
# 	# concurs with nginx's one
# 	#
# 	#location ~ /\.ht {
# 	#	deny all;
# 	#}
# }


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}





}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
